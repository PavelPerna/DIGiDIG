services:
  # Database Services
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DB_NAME:-digidig_staging}
      POSTGRES_USER: ${DB_USER:-staging_user}
      POSTGRES_PASSWORD: ${DB_PASS:-staging_password}
    volumes:
      - postgres_staging_data:/var/lib/postgresql/data
    networks:
      - digidig-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-staging_user}"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:7
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-staging_mongo}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS:-staging_password}
    volumes:
      - mongodb_staging_data:/data/db
    networks:
      - digidig-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Application Services
  identity:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER:-digidig}/digidig-identity:${IMAGE_TAG:-latest}
    environment:
      - DIGIDIG_ENV=staging
      - DB_HOST=postgres
      - DB_NAME=${DB_NAME:-digidig_staging}
      - DB_USER=${DB_USER:-staging_user}
      - DB_PASS=${DB_PASS:-staging_password}
      - JWT_SECRET=${JWT_SECRET:-staging_jwt_secret}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@staging.digidig.local}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-staging_admin_123}
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - digidig-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  storage:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER:-digidig}/digidig-storage:${IMAGE_TAG:-latest}
    environment:
      - DIGIDIG_ENV=staging
      - MONGO_HOST=mongodb
      - MONGO_USER=${MONGO_USER:-staging_mongo}
      - MONGO_PASS=${MONGO_PASS:-staging_password}
      - IDENTITY_URL=http://identity:8001
    ports:
      - "8002:8002"
    depends_on:
      mongodb:
        condition: service_healthy
      identity:
        condition: service_healthy
    networks:
      - digidig-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  smtp:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER:-digidig}/digidig-smtp:${IMAGE_TAG:-latest}
    environment:
      - DIGIDIG_ENV=staging
      - IDENTITY_URL=http://identity:8001
      - STORAGE_URL=http://storage:8002
      - SMTP_HOST=${SMTP_HOST:-smtp.staging.digidig.local}
      - SMTP_USERNAME=${SMTP_USERNAME:-staging_smtp}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-staging_smtp_pass}
    ports:
      - "8000:8000"
    depends_on:
      identity:
        condition: service_healthy
      storage:
        condition: service_healthy
    networks:
      - digidig-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  imap:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER:-digidig}/digidig-imap:${IMAGE_TAG:-latest}
    environment:
      - DIGIDIG_ENV=staging
      - IDENTITY_URL=http://identity:8001
      - STORAGE_URL=http://storage:8002
    ports:
      - "8003:8003"
    depends_on:
      identity:
        condition: service_healthy
      storage:
        condition: service_healthy
    networks:
      - digidig-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  client:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER:-digidig}/digidig-client:${IMAGE_TAG:-latest}
    environment:
      - DIGIDIG_ENV=staging
      - IDENTITY_URL=http://identity:8001
      - STORAGE_URL=http://storage:8002
      - SMTP_URL=http://smtp:8000
      - IMAP_URL=http://imap:8003
    ports:
      - "8004:8004"
    depends_on:
      identity:
        condition: service_healthy
      storage:
        condition: service_healthy
      smtp:
        condition: service_healthy
      imap:
        condition: service_healthy
    networks:
      - digidig-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  admin:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER:-digidig}/digidig-admin:${IMAGE_TAG:-latest}
    environment:
      - DIGIDIG_ENV=staging
      - IDENTITY_URL=http://identity:8001
      - STORAGE_URL=http://storage:8002
    ports:
      - "8005:8005"
    depends_on:
      identity:
        condition: service_healthy
      storage:
        condition: service_healthy
    networks:
      - digidig-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  apidocs:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER:-digidig}/digidig-apidocs:${IMAGE_TAG:-latest}
    environment:
      - DIGIDIG_ENV=staging
      - IDENTITY_URL=http://identity:8001
      - STORAGE_URL=http://storage:8002
      - SMTP_URL=http://smtp:8000
      - IMAP_URL=http://imap:8003
      - CLIENT_URL=http://client:8004
      - ADMIN_URL=http://admin:8005
    ports:
      - "8010:8010"
    depends_on:
      - identity
      - storage
      - smtp
      - imap
      - client
      - admin
    networks:
      - digidig-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8010/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  digidig-net:
    driver: bridge

volumes:
  postgres_staging_data:
    driver: local
  mongodb_staging_data:
    driver: local